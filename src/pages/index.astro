---
// index.astro
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import NowPlaying from '../components/widgets/NowPlaying.astro';
import Weather from '../components/widgets/Weather.astro';
import GitHubActivity from '../components/widgets/GitHubActivity.astro';
import NewsletterSignup from '../components/widgets/NewsletterSignup.astro';
import RetroImage from '../components/RetroImage.astro';
import WidgetContainer from '../components/WidgetContainer.astro';
import ProjectWidget from '../components/widgets/ProjectWidget.astro';

// Blog posts data
const posts = [
  {
    title: "Building with Astro 5.6 and Tailwind CSS v4",
    slug: "building-with-astro-and-tailwind",
    date: "2025-03-15",
    excerpt: "A look at the new features and improvements in the latest versions of Astro and Tailwind CSS.",
    tags: ["astro", "tailwind", "webdev"],
    image: "/images/posts/astro-tailwind.webp"
  },
  {
    title: "The Return of Retro Design in Modern Web Development",
    slug: "retro-design-in-modern-web",
    date: "2025-03-01",
    excerpt: "Exploring the resurgence of retro aesthetics in contemporary web design and how to implement them.",
    tags: ["design", "css", "trends"],
    image: "/images/posts/retro-design.webp"
  },
  {
    title: "Terminal-Inspired UI Components with Tailwind CSS",
    slug: "terminal-ui-components",
    date: "2025-02-20",
    excerpt: "Creating command-line inspired interface elements for your web projects using Tailwind CSS.",
    tags: ["ui", "tailwind", "design"],
    image: "/images/posts/terminal-ui.webp"
  }
];

// Featured projects
const projects = [
  {
    title: "RetroTerm",
    description: "A terminal-inspired UI component library for modern web applications.",
    link: "/projects/retroterm",
    tags: ["React", "TypeScript", "UI"],
    image: "/images/projects/retroterm.webp"
  },
  {
    title: "AstroMark",
    description: "A markdown-based blogging template for Astro with syntax highlighting.",
    link: "/projects/astromark",
    tags: ["Astro", "Markdown", "Blog"],
    image: "/images/projects/astromark.webp"
  }
];

// Recent music
const recentTracks = [
  {
    title: "Burning Down the House",
    artist: "Talking Heads",
    album: "Speaking in Tongues",
    cover: "/images/music/talking-heads.webp"
  },
  {
    title: "Blue Monday",
    artist: "New Order",
    album: "Power, Corruption & Lies",
    cover: "/images/music/new-order.webp"
  }
];
---

<Layout title="Bernard McWeeney - Web Developer">
  <div class="grid grid-cols-1 lg:grid-cols-12 gap-8">
    <!-- Main Content -->
    <div class="lg:col-span-8 space-y-12">
      <section class="hero mb-8" data-animation="terminal">
        <div class="bg-[var(--color-accent)] border-2 border-[var(--color-border)] p-8 sm:p-10 relative overflow-hidden">
          <div class="z-10 relative">
            <h1 class="text-4xl sm:text-5xl font-mono font-bold mb-6 flex items-baseline">
              <span class="text-white mr-2">&gt;</span> 
              <span class="text-white">Welcome/</span>
            </h1>
            <p class="text-lg max-w-2xl text-white">
              A modern retro tech blog exploring web development, clean code, and the art of digital craftsmanship. Straight lines, hard edges, and a touch of nostalgia.
            </p>
          </div>
          
          <!-- Terminal decorative elements -->
          <div class="absolute top-3 right-3 flex space-x-2">
            <div class="w-3 h-3 bg-white dark:bg-white rounded-full"></div>
            <div class="w-3 h-3 bg-white dark:bg-white rounded-full"></div>
            <div class="w-3 h-3 bg-white dark:bg-white rounded-full"></div>
          </div>
        </div>
      </section>

      <section data-animation="terminal">
        <div class="flex items-center mb-8">
          <h2 class="text-2xl font-mono font-bold">Recent Posts</h2>
          <div class="h-0.5 bg-[var(--color-border)] flex-grow ml-4"></div>
        </div>
        
        <div class="space-y-8">
          {posts.map((post, index) => (
            <article 
              class="border-2 border-[var(--color-border)] p-6 hover:border-[var(--color-accent)] transition-colors duration-300 card-shadow bg-[var(--color-accent)]"
              data-animation="terminal"
            >
              <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                {post.image && (
                  <div class="md:col-span-1">
                    <RetroImage 
                      src={post.image} 
                      alt={post.title}
                      class="w-full"
                    />
                  </div>
                )}
                <div class={post.image ? "md:col-span-2" : "md:col-span-3"}>
                  <time class="text-sm font-mono text-white">{post.date}</time>
                  <h3 class="text-xl font-bold font-mono mt-1 mb-2 text-white">
                    <a href={`/blog/${post.slug}`} class="hover:text-black dark:hover:text-black transition-colors duration-300">
                      {post.title}
                    </a>
                  </h3>
                  <p class="mb-4 text-white">{post.excerpt}</p>
                  <div class="flex flex-wrap gap-2">
                    {post.tags.map(tag => (
                      <span class="inline-block px-2 py-0.5 text-xs font-mono bg-black text-white dark:bg-white dark:text-black">
                        #{tag}
                      </span>
                    ))}
                  </div>
                </div>
              </div>
            </article>
          ))}
        </div>
        
        <div class="mt-8">
          <a 
            href="/blog" 
            class="inline-flex items-center font-mono border-2 px-4 py-2 transition-colors duration-300
                   border-[var(--color-border)] bg-white text-[var(--color-text)]
                   hover:border-[var(--color-accent)]
                   dark:bg-[var(--color-background)] dark:text-[var(--color-text)] dark:border-[var(--color-border)] dark:hover:border-[var(--color-accent)]"
          >
            View all posts
            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 ml-2" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
          </a>
        </div>
      </section>
    </div>
    
    <!-- Sidebar -->
    <aside class="lg:col-span-4" data-animation="terminal">
      <div class="lg:sticky lg:top-8 space-y-8">
        <!-- Projects Widget -->
        <WidgetContainer title="Projects">
          <ProjectWidget projects={projects} />
        </WidgetContainer>
        
        <!-- Now Playing Widget -->
        <WidgetContainer title="Now Playing">
          <NowPlaying tracks={recentTracks} />
        </WidgetContainer>
        
        <!-- Weather Widget -->
        <WidgetContainer title="Weather">
          <Weather />
        </WidgetContainer>

        <!-- GitHub Activity Widget -->
        <WidgetContainer title="GitHub Activity">
          <GitHubActivity />
        </WidgetContainer>
        
        <!-- Newsletter Signup -->
        <WidgetContainer title="Newsletter">
          <NewsletterSignup />
        </WidgetContainer>
      </div>
    </aside>
  </div>
</Layout>
<style>
  /* Card hover effects */
  .card-shadow {
    position: relative;
    transition: transform 0.3s ease;
  }
  
  .card-shadow:before {
    content: '';
    position: absolute;
    top: var(--card-shadow-offset);
    left: var(--card-shadow-offset);
    width: 100%;
    height: 100%;
    background-color: var(--color-accent);
    z-index: -1;
    transition: transform 0.3s ease;
    border: var(--border-width) solid var(--color-border);
  }
  
  .card-shadow:hover {
    transform: translate(-2px, -2px);
  }
  
  .card-shadow:hover:before {
    transform: translate(1px, 1px);
  }
</style>
