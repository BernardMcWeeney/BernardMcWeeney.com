---
// Layout.astro
import { ViewTransitions } from 'astro:transitions';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
  ogImage?: string;
}

const { 
  title, 
  description = "A retro-modern developer blog focusing on web development, programming, and tech.", 
  ogImage = "/images/og-image.png"
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Open Graph / Social Media -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta name="twitter:card" content="summary_large_image" />
    
    <!-- Preload fonts -->
    <link rel="preload" href="/fonts/SpaceMono-Regular.woff2" as="font" type="font/woff2" crossorigin />
    <link rel="preload" href="/fonts/SpaceMono-Bold.woff2" as="font" type="font/woff2" crossorigin />
    
    <title>{title}</title>
    
    <!-- View Transitions -->
    <ViewTransitions />
    
    <!-- Theme script - placed in head to avoid flash of incorrect theme -->
    <script is:inline>
      function applyTheme() {
        const storedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        
        if (storedTheme === 'dark' || (!storedTheme && systemPrefersDark)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      }
      
      // Run immediately to set initial theme
      applyTheme();
      
      // Also handle system preference changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          if (e.matches) {
            document.documentElement.classList.add('dark');
          } else {
            document.documentElement.classList.remove('dark');
          }
        }
      });
    </script>
  </head>
  <body class="bg-[var(--color-background)] text-[var(--color-text)] min-h-screen flex flex-col font-sans antialiased">
    <Header transition:persist />
    
    <main class="flex-grow container mx-auto px-4 py-8" transition:animate="slide">
      <slot />
    </main>
    
    <Footer transition:persist />

    <script>
      // Terminal effect animations for page transitions
      document.addEventListener('astro:page-load', () => {
        const elements = document.querySelectorAll('[data-animation="terminal"]');
        elements.forEach((el, index) => {
          if (el instanceof HTMLElement) {
            el.style.opacity = '0';
            el.style.transform = 'translateY(10px)';
            
            setTimeout(() => {
              el.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
              el.style.opacity = '1';
              el.style.transform = 'translateY(0)';
            }, index * 100);
          }
        });
      });
    </script>
    
    <style is:global>
      /* Selection styling */
      ::selection {
        background-color: var(--color-accent);
        color: white;
      }
    </style>
  </body>
</html>
